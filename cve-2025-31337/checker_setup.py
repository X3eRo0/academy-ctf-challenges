#!/usr/bin/env python3
"""
Setup script for the FTP checker - handles user creation and service initialization
This should be run before the checker to ensure proper service state
"""

import subprocess
import os
import sys
import random
import string
import time

def generate_random_string(length=10):
    """Generate random alphanumeric string"""
    return ''.join(random.choices(string.ascii_letters + string.digits, k=length))

def setup_service(service_ip, team_id):
    """Setup the FTP service with initial users and directory structure"""
    
    print(f"Setting up FTP service for team {team_id} at {service_ip}")
    
    # Create some default users for the service
    users_to_create = [
        ("testuser", "testpass123", "testuser_home"),
        ("alice", f"alice_pass_{generate_random_string(8)}", "alice_home"),
        ("bob", f"bob_pass_{generate_random_string(8)}", "bob_home"),
    ]
    
    for username, password, homedir in users_to_create:
        try:
            # In a real deployment, you'd use SSH or some other mechanism 
            # to run the user_admin command on the target host
            cmd = f"./user_admin create_user {username} {password} {homedir}"
            print(f"Creating user: {username}")
            # subprocess.run(cmd, shell=True, check=True)
            print(f"User {username} created (simulated)")
        except subprocess.CalledProcessError as e:
            print(f"Failed to create user {username}: {e}")
    
    print("Service setup complete")

if __name__ == "__main__":
    if len(sys.argv) < 3:
        print("Usage: ./checker_setup.py <service_ip> <team_id>")
        sys.exit(1)
    
    service_ip = sys.argv[1]
    team_id = int(sys.argv[2])
    
    setup_service(service_ip, team_id)
