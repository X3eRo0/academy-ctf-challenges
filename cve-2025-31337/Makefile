CC = gcc
CFLAGS = -Wall -Wextra -std=gnu99 -g -O0
LDFLAGS = 
LIBS = -lsqlite3 -lssl -lcrypto

# Auto-detect system and set appropriate paths
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Darwin)
    # macOS with Homebrew
    CFLAGS += -I/opt/homebrew/opt/openssl@3/include -I/opt/homebrew/opt/sqlite/include
    LDFLAGS += -L/opt/homebrew/opt/openssl@3/lib -L/opt/homebrew/opt/sqlite/lib
else ifeq ($(UNAME_S),Linux)
    # Linux - use pkg-config if available
    OPENSSL_CFLAGS := $(shell pkg-config --cflags openssl 2>/dev/null)
    OPENSSL_LIBS := $(shell pkg-config --libs openssl 2>/dev/null)
    SQLITE_CFLAGS := $(shell pkg-config --cflags sqlite3 2>/dev/null)
    SQLITE_LIBS := $(shell pkg-config --libs sqlite3 2>/dev/null)
    
    ifneq ($(OPENSSL_CFLAGS),)
        CFLAGS += $(OPENSSL_CFLAGS)
    endif
    ifneq ($(SQLITE_CFLAGS),)
        CFLAGS += $(SQLITE_CFLAGS)
    endif
    ifneq ($(OPENSSL_LIBS),)
        LIBS = $(OPENSSL_LIBS) $(SQLITE_LIBS)
    endif
endif

# Source files
SOURCES = server.c protocol.c commands.c database.c
OBJECTS = $(SOURCES:.c=.o)
TARGET = ftp_server

# User management utility
USER_UTIL = user_admin
USER_UTIL_SRC = user_admin.c database.c

.PHONY: all clean setup test

all: $(TARGET) $(USER_UTIL)

$(TARGET): $(OBJECTS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

$(USER_UTIL): $(USER_UTIL_SRC)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS)

%.o: %.c ftp_server.h
	$(CC) $(CFLAGS) -c $< -o $@

setup:
	@echo "Setting up FTP server environment..."
	mkdir -p ftp_root/anonymous
	mkdir -p ftp_root/user1
	mkdir -p ftp_root/user2
	touch ftp_root/anonymous/readme.txt
	echo "Welcome to anonymous FTP!" > ftp_root/anonymous/readme.txt
	echo "This is a test file for user1" > ftp_root/user1/test.txt
	echo "Another test file for user2" > ftp_root/user2/data.txt
	@echo "Environment setup complete!"

clean:
	rm -f $(OBJECTS) $(TARGET) $(USER_UTIL)
	rm -f ftp_users.db
	rm -rf ftp_root

test: $(TARGET) $(USER_UTIL)
	@echo "Creating test database and users..."
	./$(USER_UTIL) create_user testuser testpass user1
	./$(USER_UTIL) create_user admin admin123 user2
	@echo "Test setup complete!"
	@echo "Run: sudo ./$(TARGET) 2121 ftp_users.db ftp_root"
	@echo "Note: sudo required for chroot functionality"

# Development targets
debug: CFLAGS += -DDEBUG -fsanitize=address
debug: $(TARGET)

vulnerable: CFLAGS += -DVULNERABLE -fno-stack-protector -z execstack
vulnerable: $(TARGET)

install-deps:
	@echo "Installing dependencies..."
	@echo "On Ubuntu/Debian: sudo apt-get install libsqlite3-dev libssl-dev"
	@echo "On macOS: brew install sqlite openssl"
	@echo "On CentOS/RHEL: sudo yum install sqlite-devel openssl-devel"
